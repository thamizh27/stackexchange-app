{"version":3,"sources":["component/Search.js","component/Content.js","component/Loader.js","component/NoResult.js","App.js","index.js"],"names":["Search","searchText","useState","input","setInput","onSubmit","e","preventDefault","className","value","type","placeholder","onChange","target","Content","question","owner","user_id","title","answer_count","tags","map","tag","index","Loader","NoResult","App","query","setQuery","questions","setQuestions","isLoading","setIsLoading","useEffect","fetch","then","res","json","data","items","catch","err","console","log","text","length","question_id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6LA2BeA,G,MAzBA,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAAiB,EACPC,mBAAS,IADF,mBAC1BC,EAD0B,KACnBC,EADmB,KASjC,OACE,8BACE,uBAAMC,SARW,SAACC,GACpBA,EAAEC,iBACFN,EAAWE,GACXC,EAAS,KAKP,UACE,uBACEI,UAAU,SACVC,MAAON,EACPO,KAAK,OACLC,YAAY,iBACZC,SAAU,SAACN,GAAD,OAAOF,EAASE,EAAEO,OAAOJ,UAErC,wBAAQC,KAAK,SAAb,2BCQOI,EA7BC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACjB,OACE,sBAAKP,UAAU,UAAf,UACE,gDAAmBO,EAASC,MAAMC,WAClC,mBAAGT,UAAU,WAAb,SAAyBO,EAASG,QACjCH,EAASI,cAAgB,EACxB,oBAAGX,UAAU,QAAb,kCACwB,IACtB,sBAAMA,UAAU,SAAhB,SAA0BO,EAASI,eAFrC,cAKA,oBAAGX,UAAU,QAAb,mCACyB,IACvB,sBAAMA,UAAU,SAAhB,SAA0BO,EAASI,eAFrC,eAKF,8BACGJ,EAASK,KAAKC,KAAI,SAACC,EAAKC,GACvB,OACE,uBAAMf,UAAU,OAAhB,eACKc,IADuBC,YCTzBC,EARA,WACb,OACE,qBAAKhB,UAAU,UAAf,SACE,2DCKSiB,MARf,WACE,OACE,qBAAKjB,UAAU,UAAf,SACE,wDC4CSkB,MA1Cf,WAAgB,IAAD,EACaxB,mBAAS,cADtB,mBACNyB,EADM,KACCC,EADD,OAEqB1B,mBAAS,IAF9B,mBAEN2B,EAFM,KAEKC,EAFL,OAGqB5B,oBAAS,GAH9B,mBAGN6B,EAHM,KAGKC,EAHL,KAqBb,OAhBAC,qBAAU,WACRD,GAAa,GACbE,MAAM,mGAAD,OACgGP,EADhG,gFAGFQ,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLR,EAAaQ,EAAKC,OAClBP,GAAa,MAEdQ,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZT,GAAa,QAEhB,CAACL,IAGF,gCACE,iCACE,oBAAInB,UAAU,QAAd,iCAEF,cAAC,EAAD,CAAQP,WAAY,SAAC2C,GAAD,OAAUhB,EAASgB,OACrCb,GAAkC,IAArBF,EAAUgB,QAAgB,cAAC,EAAD,IAExCd,EACC,cAAC,EAAD,IAEA,qBAAKvB,UAAU,cAAf,SACGqB,EAAUR,KAAI,SAACN,GACd,OAAO,cAAC,EAAD,CAAoCA,SAAUA,GAAhCA,EAAS+B,sBCrC1CC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9e122d5d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst Search = ({ searchText }) => {\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    searchText(input);\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          className=\"search\"\r\n          value={input}\r\n          type=\"text\"\r\n          placeholder=\"Search here...\"\r\n          onChange={(e) => setInput(e.target.value)}\r\n        />\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","const Content = ({ question }) => {\r\n  return (\r\n    <div className=\"content\">\r\n      <h2>Question ID - {question.owner.user_id}</h2>\r\n      <p className=\"question\">{question.title}</p>\r\n      {question.answer_count <= 1 ? (\r\n        <p className=\"count\">\r\n          This question contain{\" \"}\r\n          <span className=\"number\">{question.answer_count}</span> answer.\r\n        </p>\r\n      ) : (\r\n        <p className=\"count\">\r\n          This question contains{\" \"}\r\n          <span className=\"number\">{question.answer_count}</span> answers.\r\n        </p>\r\n      )}\r\n      <div>\r\n        {question.tags.map((tag, index) => {\r\n          return (\r\n            <span className=\"tags\" key={index}>\r\n              # {tag}\r\n            </span>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","import React from \"react\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"loading\">\r\n      <p>Loading. Please wait...</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\n\r\nfunction NoResult() {\r\n  return (\r\n    <div className=\"loading\">\r\n      <p>Results Not Found...</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NoResult;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Search from \"./component/Search\";\nimport Content from \"./component/Content\";\nimport Loader from \"./component/Loader\";\nimport NoResult from \"./component/NoResult\";\n\nfunction App() {\n  const [query, setQuery] = useState(\"mediaquery\");\n  const [questions, setQuestions] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetch(\n      `https://api.stackexchange.com/2.2/search/advanced?page=1&pagesize=20&order=desc&sort=activity&q=${query}&accepted=False&closed=False&migrated=False&notice=False&site=stackoverflow`\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        setQuestions(data.items);\n        setIsLoading(false);\n      })\n      .catch((err) => {\n        console.log(err);\n        setIsLoading(false);\n      });\n  }, [query]);\n\n  return (\n    <div>\n      <header>\n        <h1 className=\"title\">StackExchange App</h1>\n      </header>\n      <Search searchText={(text) => setQuery(text)} />\n      {!isLoading && questions.length === 0 && <NoResult />}\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"map-content\">\n          {questions.map((question) => {\n            return <Content key={question.question_id} question={question} />;\n          })}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}